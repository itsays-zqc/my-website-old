"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9760],{3905:(t,e,r)=>{r.d(e,{Zo:()=>c,kt:()=>k});var o=r(7294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function s(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function a(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?s(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,o,n=function(t,e){if(null==t)return{};var r,o,n={},s=Object.keys(t);for(o=0;o<s.length;o++)r=s[o],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(t);for(o=0;o<s.length;o++)r=s[o],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var i=o.createContext({}),p=function(t){var e=o.useContext(i),r=e;return t&&(r="function"==typeof t?t(e):a(a({},e),t)),r},c=function(t){var e=p(t.components);return o.createElement(i.Provider,{value:e},t.children)},m="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},d=o.forwardRef((function(t,e){var r=t.components,n=t.mdxType,s=t.originalType,i=t.parentName,c=l(t,["components","mdxType","originalType","parentName"]),m=p(r),d=n,k=m["".concat(i,".").concat(d)]||m[d]||u[d]||s;return r?o.createElement(k,a(a({ref:e},c),{},{components:r})):o.createElement(k,a({ref:e},c))}));function k(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var s=r.length,a=new Array(s);a[0]=d;var l={};for(var i in e)hasOwnProperty.call(e,i)&&(l[i]=e[i]);l.originalType=t,l[m]="string"==typeof t?t:n,a[1]=l;for(var p=2;p<s;p++)a[p]=r[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3657:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var o=r(7462),n=(r(7294),r(3905));const s={},a="PostProcessPowerMonitor",l={unversionedId:"maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitor",id:"maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitor",title:"PostProcessPowerMonitor",description:"Bases: dict",source:"@site/docs/maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitor.md",sourceDirName:"maxoptics_sdk/core/monitors/post_process_power_monitor_typing",slug:"/maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitor",permalink:"/my-website/docs/maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitor",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitor.md",tags:[],version:"current",frontMatter:{},sidebar:"sdkSidebar",previous:{title:"PostProcessModeExpansionModeExpansionmonitorsForExpansion",permalink:"/my-website/docs/maxoptics_sdk/core/monitors/post_process_mode_expansion_typing/PostProcessModeExpansionModeExpansionmonitorsForExpansion"},next:{title:"PostProcessPowerMonitorAdvanced",permalink:"/my-website/docs/maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitorAdvanced"}},i={},p=[],c={toc:p},m="wrapper";function u(t){let{components:e,...r}=t;return(0,n.kt)(m,(0,o.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"postprocesspowermonitor"},"PostProcessPowerMonitor"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class maxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitor(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("strong",{parentName:"p"},"dict")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"advanced:")," PostProcessPowerMonitorAdvanced\n",(0,n.kt)("strong",{parentName:"p"},"general:")," PostProcessPowerMonitorGeneral\n",(0,n.kt)("strong",{parentName:"p"},"geometry:")," PostProcessPowerMonitorGeometry\n",(0,n.kt)("strong",{parentName:"p"},"mode_expansion:")," PostProcessPowerMonitorModeExpansion"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class \nmaxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitorAdvanced(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("strong",{parentName:"p"},"dict")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"sampling_frequency:")," ",(0,n.kt)("em",{parentName:"p"},"PostProcessPowerMonitorAdvancedSamplingFrequency")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class \nmaxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitorGeneralFrequencyProfile(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: dict"),(0,n.kt)("table",{class:"custom-table"},(0,n.kt)("tr",null,(0,n.kt)("td",{class:"typeface"},"Parameters"),(0,n.kt)("td",{class:"typeface"},"Explanation")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_center"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_max"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_min"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_points"),(0,n.kt)("td",null,"int")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_span"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"sample_spacing"),(0,n.kt)("td",null,"Literal['uniform']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"spacing_limit"),(0,n.kt)("td",null,"Literal['min_max', 'center_span']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"spacing_type"),(0,n.kt)("td",null,"Literal['wavelength', 'frequency']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"use_wavelength_spacing"),(0,n.kt)("td",null,"bool")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"wavelength_center"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"wavelength_max"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"wavelength_min"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"wavelength_span"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression"))),(0,n.kt)("br",null))}u.isMDXComponent=!0}}]);