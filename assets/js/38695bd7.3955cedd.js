"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3831],{3905:(t,e,o)=>{o.d(e,{Zo:()=>c,kt:()=>k});var r=o(67294);function n(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function l(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,r)}return o}function a(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?l(Object(o),!0).forEach((function(e){n(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):l(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function s(t,e){if(null==t)return{};var o,r,n=function(t,e){if(null==t)return{};var o,r,n={},l=Object.keys(t);for(r=0;r<l.length;r++)o=l[r],e.indexOf(o)>=0||(n[o]=t[o]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)o=l[r],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(n[o]=t[o])}return n}var i=r.createContext({}),p=function(t){var e=r.useContext(i),o=e;return t&&(o="function"==typeof t?t(e):a(a({},e),t)),o},c=function(t){var e=p(t.components);return r.createElement(i.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},m=r.forwardRef((function(t,e){var o=t.components,n=t.mdxType,l=t.originalType,i=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),u=p(o),m=n,k=u["".concat(i,".").concat(m)]||u[m]||d[m]||l;return o?r.createElement(k,a(a({ref:e},c),{},{components:o})):r.createElement(k,a({ref:e},c))}));function k(t,e){var o=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=o.length,a=new Array(l);a[0]=m;var s={};for(var i in e)hasOwnProperty.call(e,i)&&(s[i]=e[i]);s.originalType=t,s[u]="string"==typeof t?t:n,a[1]=s;for(var p=2;p<l;p++)a[p]=o[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,o)}m.displayName="MDXCreateElement"},18833:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var r=o(87462),n=(o(67294),o(3905));const l={},a="PostProcessPowerMonitorModeExpansionModeCalculation",s={unversionedId:"maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitorModeExpansionModeCalculation",id:"maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitorModeExpansionModeCalculation",title:"PostProcessPowerMonitorModeExpansionModeCalculation",description:"PostProcessPowerMonitor",source:"@site/docs/maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitorModeExpansionModeCalculation.md",sourceDirName:"maxoptics_sdk/core/monitors/post_process_power_monitor_typing",slug:"/maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitorModeExpansionModeCalculation",permalink:"/my-website/docs/maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitorModeExpansionModeCalculation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitorModeExpansionModeCalculation.md",tags:[],version:"current",frontMatter:{},sidebar:"sdkSidebar",previous:{title:"PostProcessPowerMonitorModeExpansion",permalink:"/my-website/docs/maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitorModeExpansion"},next:{title:"PostProcessPowerMonitorModeExpansionModeCalculationBentWaveguide",permalink:"/my-website/docs/maxoptics_sdk/core/monitors/post_process_power_monitor_typing/PostProcessPowerMonitorModeExpansionModeCalculationBentWaveguide"}},i={},p=[{value:"PostProcessPowerMonitor",id:"postprocesspowermonitor",level:2},{value:"PostProcessPowerMonitorAdvanced",id:"postprocesspowermonitoradvanced",level:2},{value:"PostProcessPowerMonitorAdvancedSamplingFrequency",id:"postprocesspowermonitoradvancedsamplingfrequency",level:2},{value:"PostProcessPowerMonitorGeneral",id:"postprocesspowermonitorgeneral",level:2},{value:"PostProcessPowerMonitorGeneralFrequencyProfile",id:"postprocesspowermonitorgeneralfrequencyprofile",level:2},{value:"PostProcessPowerMonitorGeometry",id:"postprocesspowermonitorgeometry",level:2},{value:"PostProcessPowerMonitorModeExpansion",id:"postprocesspowermonitormodeexpansion",level:2},{value:"PostProcessPowerMonitorModeExpansionModeCalculation",id:"postprocesspowermonitormodeexpansionmodecalculation-1",level:2},{value:"PostProcessPowerMonitorModeExpansionModeCalculationBentWaveguide",id:"postprocesspowermonitormodeexpansionmodecalculationbentwaveguide",level:2},{value:"PostProcessPowerMonitorModeExpansionModeCalculationOverrideGlobalMonitorSetting",id:"postprocesspowermonitormodeexpansionmodecalculationoverrideglobalmonitorsetting",level:2}],c={toc:p},u="wrapper";function d(t){let{components:e,...o}=t;return(0,n.kt)(u,(0,r.Z)({},c,o,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"postprocesspowermonitormodeexpansionmodecalculation"},"PostProcessPowerMonitorModeExpansionModeCalculation"),(0,n.kt)("h2",{id:"postprocesspowermonitor"},"PostProcessPowerMonitor"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class maxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitor(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("strong",{parentName:"p"},"dict")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"advanced:")," PostProcessPowerMonitorAdvanced"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"general:")," PostProcessPowerMonitorGeneral"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"geometry:")," PostProcessPowerMonitorGeometry"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"mode_expansion:")," PostProcessPowerMonitorModeExpansion"),(0,n.kt)("h2",{id:"postprocesspowermonitoradvanced"},"PostProcessPowerMonitorAdvanced"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class \nmaxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitorAdvanced(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("strong",{parentName:"p"},"dict")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"sampling_frequency:")," ",(0,n.kt)("em",{parentName:"p"},"PostProcessPowerMonitorAdvancedSamplingFrequency")),(0,n.kt)("h2",{id:"postprocesspowermonitoradvancedsamplingfrequency"},"PostProcessPowerMonitorAdvancedSamplingFrequency"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class \nmaxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitorAdvancedSamplingFrequency(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("strong",{parentName:"p"},"dict")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"min_sampling_per_cycle:")," int"),(0,n.kt)("h2",{id:"postprocesspowermonitorgeneral"},"PostProcessPowerMonitorGeneral"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class maxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitorGeneral(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("strong",{parentName:"p"},"dict")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"frequency_profile:")," ",(0,n.kt)("em",{parentName:"p"},"PostProcessPowerMonitorGeneralFrequencyProfile")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"override_global_options:")," ",(0,n.kt)("em",{parentName:"p"},"bool")),(0,n.kt)("h2",{id:"postprocesspowermonitorgeneralfrequencyprofile"},"PostProcessPowerMonitorGeneralFrequencyProfile"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class \nmaxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitorGeneralFrequencyProfile(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("strong",{parentName:"p"},"dict")),(0,n.kt)("table",{class:"custom-table"},(0,n.kt)("tr",null,(0,n.kt)("td",{class:"typeface"},"Parameters"),(0,n.kt)("td",{class:"typeface"},"Explanation")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_center"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_max"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_min"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_points"),(0,n.kt)("td",null,"int")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_span"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"sample_spacing"),(0,n.kt)("td",null,"Literal['uniform']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"spacing_limit"),(0,n.kt)("td",null,"Literal['min_max', 'center_span']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"spacing_type"),(0,n.kt)("td",null,"Literal['wavelength', 'frequency']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"use_wavelength_spacing"),(0,n.kt)("td",null,"bool")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"wavelength_center"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"wavelength_max"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"wavelength_min"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"wavelength_span"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression"))),(0,n.kt)("br",null),(0,n.kt)("h2",{id:"postprocesspowermonitorgeometry"},"PostProcessPowerMonitorGeometry"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class \nmaxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitorGeometry(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("strong",{parentName:"p"},"dict")),(0,n.kt)("table",{class:"custom-table"},(0,n.kt)("tr",null,(0,n.kt)("td",{class:"typeface"},"Parameters"),(0,n.kt)("td",{class:"typeface"},"Explanation")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"monitor_type"),(0,n.kt)("td",null,"Literal['point', 'linear_x', 'linear_y', 'linear_z', '2d_x_normal', '2d_y_normal', '2d_z_normal', '3d']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"x"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"x_max"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"x_min"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"x_span"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"y"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"y_max"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"y_min"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"y_span"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"z"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"z_max"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"z_min"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"z_span"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression"))),(0,n.kt)("br",null),(0,n.kt)("h2",{id:"postprocesspowermonitormodeexpansion"},"PostProcessPowerMonitorModeExpansion"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class \nmaxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitorModeExpansion(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("strong",{parentName:"p"},"dict")),(0,n.kt)("table",{class:"custom-table"},(0,n.kt)("tr",null,(0,n.kt)("td",{class:"typeface"},"Parameters"),(0,n.kt)("td",{class:"typeface"},"Explanation")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"direction"),(0,n.kt)("td",null,"Literal['positive', 'negative']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"enable"),(0,n.kt)("td",null,"bool")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"mode_calculation"),(0,n.kt)("td",null,"PostProcessPowerMonitorModeExpansionModeCalculation"))),(0,n.kt)("br",null),(0,n.kt)("h2",{id:"postprocesspowermonitormodeexpansionmodecalculation-1"},"PostProcessPowerMonitorModeExpansionModeCalculation"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class\n maxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitorModeExpansionModeCalculation(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("strong",{parentName:"p"},"dict")),(0,n.kt)("table",{class:"custom-table"},(0,n.kt)("tr",null,(0,n.kt)("td",{class:"typeface"},"Parameters"),(0,n.kt)("td",{class:"typeface"},"Explanation")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"bent_waveguide"),(0,n.kt)("td",null,"PostProcessPowerMonitorModeExpansionModeCalculationBentWaveguide")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"mode_index"),(0,n.kt)("td",null,"Tuple[Any, ...] | List[Any]")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"mode_selection"),(0,n.kt)("td",null,"Literal['fundamental', 'fundamental_TE', 'fundamental_TM', 'user_select']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"n"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"number_of_trial_modes"),(0,n.kt)("td",null,"int")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"override_global_monitor_setting"),(0,n.kt)("td",null,"PostProcessPowerMonitorModeExpansionModeCalculationOverrideGlobalMonitorSetting")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"override_global_options"),(0,n.kt)("td",null,"bool")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"search"),(0,n.kt)("td",null,"Literal['near_n', 'max_index']"))),(0,n.kt)("h2",{id:"postprocesspowermonitormodeexpansionmodecalculationbentwaveguide"},"PostProcessPowerMonitorModeExpansionModeCalculationBentWaveguide"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class \nmaxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitorModeExpansionModeCalculationBentWaveguide(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("strong",{parentName:"p"},"dict")),(0,n.kt)("table",{class:"custom-table"},(0,n.kt)("tr",null,(0,n.kt)("td",{class:"typeface"},"Parameters"),(0,n.kt)("td",{class:"typeface"},"Explanation")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"bent_waveguide"),(0,n.kt)("td",null,"bool")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"location"),(0,n.kt)("td",null,"Literal['simulation_center']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"orientation"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"radius"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression"))),(0,n.kt)("h2",{id:"postprocesspowermonitormodeexpansionmodecalculationoverrideglobalmonitorsetting"},"PostProcessPowerMonitorModeExpansionModeCalculationOverrideGlobalMonitorSetting"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-py"},"class \nmaxoptics_sdk.core.monitors.post_process_power_monitor_typing.PostProcessPowerMonitorModeExpansionModeCalculationOverrideGlobalMonitorSetting(*args, **kwargs)\n")),(0,n.kt)("p",null,"Bases: ",(0,n.kt)("strong",{parentName:"p"},"dict")),(0,n.kt)("table",{class:"custom-table"},(0,n.kt)("tr",null,(0,n.kt)("td",{class:"typeface"},"Parameters"),(0,n.kt)("td",{class:"typeface"},"Explanation")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_center"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_max"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_min"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_points"),(0,n.kt)("td",null,"int")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"frequency_span"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"sample_spacing"),(0,n.kt)("td",null,"Literal['uniform']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"spacing_limit"),(0,n.kt)("td",null,"Literal['min_max', 'center_span']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"spacing_type"),(0,n.kt)("td",null,"Literal['wavelength', 'frequency']")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"use_wavelength_spacing"),(0,n.kt)("td",null,"bool")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"wavelength_center"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"wavelength_max"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"wavelength_min"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression")),(0,n.kt)("tr",null,(0,n.kt)("td",null,"wavelength_span"),(0,n.kt)("td",null,"float | int | FloatParameter | FloatParameterExpression"))))}d.isMDXComponent=!0}}]);